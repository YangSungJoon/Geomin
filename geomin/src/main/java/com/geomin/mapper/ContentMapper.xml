<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.geomin.mapper.ContentMapper">

	<select id="contentList" resultType="com.geomin.vo.SubScriptionVO">
	<![CDATA[
    select * 
    from (
        select rownum rn, a.*
        from(
            select 
            content_id,content_name, learning_difficulty, learning_member,
            TO_CHAR(price, '9,999,999') as price, sale ||'%' as sale, to_char((price - (price * (sale / 100))),'9,999,999') as real_price, learning_content, is_deleted 
            from content
            where 1=1
	]]>
            <include refid="learning_difficulty"></include>
            
            order by content_id desc
            ) a
        )
        where rn between #{startNo} AND #{endNo} 
	</select>
	
	<select id="contentListCnt" resultType="int">
	<![CDATA[
    select count(*) 
    from (
        select rownum rn, a.*
        from(
            select 
            content_id,content_name, learning_difficulty, learning_member,
            TO_CHAR(price, '9,999,999') as price, sale ||'%' as sale, to_char((price - (price * (sale / 100))),'9,999,999') as real_price, learning_content 
            from content
            where 1=1
	]]>
			<include refid="learning_difficulty"></include>
            
            order by content_id desc
            ) a
        )
	</select>
	
	<select id="subContentList" resultType="com.geomin.vo.SubScriptionVO">
	
        select * 
            from(
            select rownum rn, a.*
            from(
                    select s.content_id ,c.CONTENT_NAME, c.LEARNING_MEMBER, TO_CHAR(c.price, '9,999,999') as price, to_char((c.price - (c.price * (c.sale / 100))),'9,999,999') as real_price,
                     c.LEARNING_DIFFICULTY, c.LEARNING_CONTENT, to_char(s.subscription_date,'yyyy-MM-dd') as subscription_date,s.paystatus
                from content c, subscription s
                where c.content_id = s.content_id
                and s.user_id = #{user_id}
                order by s.subscription_date DESC) a)
    where rn between #{startNo} AND #{endNo} 
	
	</select>

	
	<select id="subContentListCnt" resultType="int">
	
        select count(*) 
            from(
            select rownum rn, a.*
            from(
                    select s.content_id ,c.CONTENT_NAME, c.LEARNING_MEMBER, TO_CHAR(c.price, '9,999,999') as price, to_char((c.price - (c.price * (c.sale / 100))),'9,999,999') as real_price,
                     c.LEARNING_DIFFICULTY, c.LEARNING_CONTENT, to_char(s.subscription_date,'yyyy-MM-dd') as subscription_date,s.paystatus
                from content c, subscription s
                where c.content_id = s.content_id
                and s.user_id = #{user_id}
                order by s.subscription_date DESC) a)
	
	</select>


	<select id="groupApproval" resultType="com.geomin.vo.SubScriptionVO">
	<![CDATA[
    select * 
    from(
        select rownum rn, a.*
            from(
                    select l.content_id, c.content_name, g.group_name,l.learner_name , to_char(l.group_appdate, 'yyyy-MM-dd') as group_appdate,
                      s.TOTAL_PERSONNEL, s.current_personnel, l.groupyn, s.user_id, l.user_id_learner, g.group_id 
                from learner_group l, content c, SUBSCRIPTION s, groups g
                where c.content_id = l.content_id
                    and s.content_id = l.content_id
                    and g.group_id = l.group_id
                    and s.user_id = #{user_id}
	]]>
			<include refid="sel_name"></include>
 			<include refid="homeworkGroupyn"></include>
				order by group_id desc
                ) a
        )
        where rn between #{startNo} AND #{endNo} 
	</select>

	<select id="groupApprovalCnt" resultType="int">
	<![CDATA[
    select count(*) 
    from(
        select rownum rn, a.*
            from(
                    select l.content_id, c.content_name, g.group_name,l.learner_name , to_char(l.group_appdate, 'yyyy-MM-dd') as group_appdate,
                      s.TOTAL_PERSONNEL, s.current_personnel, l.groupyn, s.user_id, l.user_id_learner, g.group_id 
                from learner_group l, content c, SUBSCRIPTION s, groups g
                where c.content_id = l.content_id
                    and s.content_id = l.content_id
                    and g.group_id = l.group_id
                    and s.user_id = #{user_id}
	]]>
			<include refid="sel_name"></include>
			<include refid="homeworkGroupyn"></include>
				order by group_id desc
                ) a
        )
	</select>





	<select id="myGroup" resultType="com.geomin.vo.SubScriptionVO">
        select *
        from(
            select rownum rn, a.*
                from(
                        select distinct g.user_id_leader ,g.content_id, g.group_name, s.content_name, s.total_personnel, s.current_personnel, g.group_id
                    from subscription s, groups g
                    where g.content_id = s.content_id
                    and g.user_id_leader = #{user_id}) a
                    order by group_id desc
                    )
    	where rn between #{startNo} AND #{endNo} 
	</select>

	<select id="myGroupCnt" resultType="int">
        select count(*)
        from(
            select rownum rn, a.*
                from(
                        select distinct g.user_id_leader ,g.content_id, g.group_name, s.content_name, s.total_personnel, s.current_personnel, g.group_id
                    from subscription s, groups g
                    where g.content_id = s.content_id
                    and g.user_id_leader = #{user_id}) a
                    order by group_id desc
                    )
	</select>





	<select id="option_content_id" resultType="com.geomin.vo.SubScriptionVO">
		select distinct content_id, content_name, total_personnel
	            from subscription
	            where user_id = #{user_id}
	            order by content_id asc
	</select>
	
	<select id="homeworkEval" resultType="com.geomin.vo.SubScriptionVO">
        select *
        from(
            select rownum rn, a.*
            from(
                    select u.user_name, h.HOMEWORK_DEADLINE, sysdate,  HOMEWORK_CONTENT_LEARNER, h.group_id, h.homework_no, h.evaluation, h.HOMEWORK_SUBDATE, group_name
                from homework h, users u, groups g
                where u.user_id = h.user_id_learner
                and h.group_id = g.group_id) a
                order by HOMEWORK_SUBDATE desc
            )
       where rn between #{startNo} AND #{endNo} 
	</select>

	
	<select id="homeworkEvalCnt" resultType="int">
        select count(*)
        from(
            select rownum rn, a.*
            from(
                    select u.user_name, h.HOMEWORK_DEADLINE, sysdate,  HOMEWORK_CONTENT_LEARNER, h.group_id, h.homework_no, h.evaluation, h.HOMEWORK_SUBDATE, group_name
                from homework h, users u, groups g
                where u.user_id = h.user_id_learner
                and h.group_id = g.group_id) a
                order by HOMEWORK_SUBDATE desc
            )
	</select>
	

	<select id="homework_option" resultType="com.geomin.vo.SubScriptionVO">
	        select distinct c.content_name
        from groups g, content c
        where c.content_id = g.content_id
	</select>


	<insert id="insertgroup">
	<selectKey keyProperty="group_id" order="BEFORE" resultType="String">
  		select 'G' || LPAD(SEQ_groups.NEXTVAL, 4, '0') from dual
	</selectKey>
	insert into groups values(#{group_id}, #{user_id_leader}, #{content_id},#{group_name}, #{group_personnel},#{learning_start} ,#{learning_end})
	
	</insert>

	<insert id="insertSubContent">

	insert into subscription 
		select #{user_id}, content_id, content_name, sysdate, (price - (price * (sale / 100))) as real_price,
														
		
		    LEARNING_MEMBER, 0,'Y'
		    from content
		    where content_id = #{content_id}
	
	</insert>

	
	<update id="payStatusUpdate">
    update subscription set paystatus = 'C' where content_id = #{content_id }
    </update>
    
    <insert id="insertContentPay">
    insert into sales (SUBSCRIPTION_DATE, CONTENT_ID, TRANSACTION_COUNT, SALES)
            (select sysdate, content_id, '1', (price - (price * (sale / 100)))
            from content
            where content_id = #{content_id})
    </insert>
    
    <delete id="deletePay">
    delete from sales where content_id = #{content_id}
    </delete>
    
    
    <update id="updateGroupyn">
           update LEARNER_GROUP
		    set groupyn = 'Y'
		    where user_id_learner= #{user_id_learner}
    </update>

	<update id="add_current">
	    update subscription
	    set CURRENT_PERSONNEL = CURRENT_PERSONNEL + 1
	    where content_id = #{content_id}
	</update>
    
    <delete id="delGroup">
    	delete from groups where group_id = #{group_id}
    </delete>
    
    
    <insert id="homework_add">
	   	<selectKey keyProperty="homework_no" order="BEFORE" resultType="String">
	  		select 'H' || LPAD(SEQ_HOMEWORK.NEXTVAL, 4, '0') from dual
		</selectKey>
       insert into homework 
       		values(#{homework_no}, #{group_id}, #{content_id}, #{user_id_leader}, #{user_id_learner}
   	 				,#{homework_deadline}, #{homework_content_leader}, '','','')	
    </insert>
    
    
    <update id="updateEvaluation">
   		update homework set evaluation = #{evaluation} where homework_no = #{homework_no}
    </update>
    
   	<sql id="sel_name">
		<choose>
   			<when test="content_name != null and content_name != ''">
		      	and s.content_name = #{content_name}
		    </when>
		</choose>
		
	</sql>
    
    <sql id="learning_difficulty">
		<choose>
   			<when test="learning_difficulty != null and learning_difficulty != ''">
		      	and learning_difficulty = #{learning_difficulty}
		    </when>
		</choose>
		
	</sql>
	
	<sql id="homeworkGroupyn">
		<choose>
			<when test="groupyn != null and groupyn != ''">
				and groupyn = 'Y'
			</when>
		</choose>
	</sql>
	

  </mapper>