<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.geomin.mapper.GroupJoinMapper">
	
	<insert id="groupAdd" parameterType="java.lang.String">
		insert into learner_group (user_id_learner, user_id_leader
      , group_id, content_id, learner_name, group_appdate, groupyn)
      select users.user_id, groups.user_id_leader, groups.group_id
      , groups.content_id, users.user_name, sysdate, 'N'
      from users
      inner join groups on users.user_id = #{user_id}
      and groups.group_id = #{group_id}
	</insert>
	
	<select id = "userInfo" resultType="com.geomin.vo.UserVO">
		select * from users where user_id = #{user_id, jdbcType=VARCHAR}
	</select>
	
	<select id = "selectGroup" resultType="com.geomin.vo.GroupJoinVO">
		select groups.group_id, (SELECT user_name FROM users WHERE user_id = groups.user_id_leader) AS user_id_leader
	    , groups.content_id, groups.group_name, groups.group_personnel
	    , TO_CHAR(groups.learning_start, 'yyyy-MM-dd') AS learning_start
	    , TO_CHAR(groups.learning_end, 'yyyy-MM-dd') AS learning_end 
	    from groups, users 
	    where users.user_id = groups.user_id_leader
	    and group_id = #{group_id}
	</select>
	
	<!-- 가입된 그룹 정보 조회 -->
	<select id = "JoinGroupInfo" resultType = "com.geomin.vo.GroupJoinVO">
		SELECT
	    user_id,
	    learner_group.group_id,
	    groups.group_name,
	    TO_CHAR(groups.learning_start, 'yyyy-MM-dd') AS learning_start,
	    TO_CHAR(groups.learning_end, 'yyyy-MM-dd') AS learning_end,
	    (SELECT user_name FROM users WHERE user_id = learner_group.user_id_leader) AS user_id_leader,
	    groupyn
		FROM
	    groups, learner_group, users
		WHERE
	    users.user_id = learner_group.user_id_learner
	    AND users.user_id = #{user_id}
	    AND groups.group_id = learner_group.group_id
	    AND learner_group.groupyn = 'Y'
	</select>
	
	<!-- 승인 대기중 그룹 정보 조회 -->
	<select id = "JoinGroupInfo2" resultType = "com.geomin.vo.GroupJoinVO">
		SELECT
	    user_id,
	    learner_group.group_id,
	    groups.group_name,
	    TO_CHAR(groups.learning_start, 'yyyy-MM-dd') AS learning_start,
	    TO_CHAR(groups.learning_end, 'yyyy-MM-dd') AS learning_end,
	    (SELECT user_name FROM users WHERE user_id = learner_group.user_id_leader) AS user_id_leader,
	    groupyn
		FROM
	    groups, learner_group, users
		WHERE
	    users.user_id = learner_group.user_id_learner
	    AND users.user_id = #{user_id}
	    AND groups.group_id = learner_group.group_id
	    AND learner_group.groupyn = 'N'
	</select>
</mapper>